FROM ghcr.io/astral-sh/uv:0.8.22-python3.10-trixie-slim

ARG USER=me
RUN useradd -ms /bin/bash -u 1000 ${USER} \
  && mkdir /home/${USER}/workspace \
  && chown 1000:1000 /home/${USER}/workspace

RUN apt-get update \
  && apt-get install -y --no-install-recommends \
  build-essential cmake curl git \
  && rm -rf /var/cache/apt/archives /var/lib/apt/lists/*

ENV NVM_VERSION=0.40.3
ENV NODE_VERSION=22.20.0
ENV NVM_DIR=/home/me/.nvm
RUN su - me -c "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v${NVM_VERSION}/install.sh | bash" \
  && su - me -c "source $NVM_DIR/nvm.sh && nvm install ${NODE_VERSION}"
ENV PATH="${NVM_DIR}/versions/node/v${NODE_VERSION}/bin/:${PATH}"

COPY docker/setup/pyproject.toml /setup/pyproject.toml
RUN cp /setup/pyproject.toml /home/${USER}/workspace/pyproject.toml \
  && su - me -c "cd /home/${USER}/workspace && uv sync" \
  && mv /home/${USER}/workspace/.venv /setup/venv \
  && mv /home/${USER}/workspace/uv.lock /setup/uv.lock \
  && find /home/${USER}/workspace -mindepth 1 -maxdepth 1 -print0 | xargs -r0 rm -R
COPY docker/setup /setup
COPY docker/app /app
USER 1000:1000
ENV UV_TOOL_BIN_DIR=
ENV PATH="/home/${USER}/.local/bin:$PATH"
WORKDIR /home/${USER}/workspace
CMD ["uv", "run", "python"]
